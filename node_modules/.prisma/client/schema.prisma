generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  bookings  Booking[]
  createdAt DateTime  @default(now())
}

model Teacher {
  id           Int       @id @default(autoincrement())
  name         String
  country      String
  accent       String
  pricePerHour Int
  rating       Float
  headline     String
  bio          String
  avatarUrl    String
  tags         String
  slots        Slot[]
  bookings     Booking[]
}

model Slot {
  id        Int     @id @default(autoincrement())
  isoTime   String
  teacher   Teacher @relation(fields: [teacherId], references: [id])
  teacherId Int
  booked    Boolean @default(false)
}

model Booking {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  teacher   Teacher  @relation(fields: [teacherId], references: [id])
  teacherId Int
  slotTime  String
  status    String
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([teacherId, slotTime])
}

model Order {
  id        String   @id @default(cuid())
  userId    String
  teacherId String
  packageId String
  amount    Int
  status    String   @default("pending") // pending | success | failed
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
